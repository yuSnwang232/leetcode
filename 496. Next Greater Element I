package main

import(
  "fmt"
)

func main(){
      nums1 := []int{4,1,2}
      nums2 := []int{1,3,4,2}
	var result []int
	result = nextGreaterElement(nums1,nums2)
	fmt.Println("%d",result)
}

func nextGreaterElement(nums1 []int, nums2 []int) []int {
	a := make(map[int]int)
      //var result []int
	var stack []int
	//Go through nums2, push it into the stack
      for _, v := range nums2 {
        //As soon as a larger number is found, pop the top number 
        //and update the next maximum numeric value for the top element
		for len(stack) != 0 && v > stack[len(stack)-1] {
			a[stack[len(stack)-1]] = v
			stack = stack[:len(stack)-1]
		}
		stack = append(stack, v)
	}
      //go through nums1 if find the Corresponding value otherwise return -1 
	for i, j := range nums1 { 
		if value, ok := a[j]; ok {
			nums1[i] = value
		} else {
			nums1[i] = -1
		}
	}
	return nums1
}

/*
func nextGreaterElement(nums1 []int, nums2 []int) []int {
	stack := make([]int,0)
                //Directly traverses the two arrays, according to the elements in nums1, 
                //if you can find the output then push into the result else return -1
	for i:=0;i <= len(nums1) - 1;i++ {
		for j:=0;j <= len(nums2) - 1;j++ {
			if nums1[i] == nums2[j] {
				symbol := false
				for k := j+1; k <= len(nums2) - 1;k++ {
					if nums1[i] < nums2[k] {
						symbol = true
						stack = append(stack,nums2[k])
						break
					}
				}
				if symbol == false {
					stack = append(stack,-1)
				}
				break
			}
		}
	}
	return stack
}
*/







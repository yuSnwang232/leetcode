package main

import(
  "fmt"
)

func main(){
      //height := []int{0,1,0,2,1,0,1,3,2,1,2,1}
      //height := []int{1,0}
	n := 3
      var result int
	result = climbStairs(n)
	fmt.Println("%d",result)
}

func climbStairs(n int) int {
    if n == 1{
        return 1
    }
    
    a1 := [][]int{
        []int{1, 1}, 
        []int{1, 2},  
    }

    a2 := [][]int{
        []int{0, 1},
        []int{1, 1},
    }

    res := matriceMultiple(a1, matircePow(a2, n-2))
    //resuly[1][1] is the Tn
    return res[1][1]
}

// Matrix fast power
func matircePow(a [][]int, n int)[][]int{
    tag := a
    res := [][]int{
        []int{1, 0},
        []int{0, 1},
    }

    for n!=0{
        if n&1 != 0{
            res = matriceMultiple(res, tag)
        }
        tag = matriceMultiple(tag, tag)
        n >>= 1
    }
    return res
}

// Matrix Multiple
func matriceMultiple(a [][]int, b [][]int)[][]int{
    return [][]int{
        []int{ a[0][0] * b[0][0] + a[0][1]*b[1][0], a[0][0] * b[0][1] + a[0][1]*b[1][1]},
        []int{ a[1][0] * b[0][0] + a[1][1]*b[1][0], a[1][0] * b[0][1] + a[1][1]*b[1][1]},
    }
}

/*
func climbStairs(n int) int {
    a, b, result := 0, 0, 1
    if n == 1{
         return 1
}
    for i := 0; i < n; i++ {
        a = b
        b = result
        result = a + b
    }
    return result
}
*/

/*
*/
